{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Michael Chang\\\\dronuts-2019-group-4\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Michael Chang\\\\dronuts-2019-group-4\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Michael Chang\\\\dronuts-2019-group-4\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Michael Chang\\\\dronuts-2019-group-4\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Michael Chang\\\\dronuts-2019-group-4\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Michael Chang\\\\dronuts-2019-group-4\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael Chang\\\\dronuts-2019-group-4\\\\client\\\\src\\\\components\\\\customer\\\\Counter.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter(props) {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Counter).call(this, props));\n    _this.state = {\n      value: _this.props.itemQuantity\n    };\n    _this.increment = _this.increment.bind(_assertThisInitialized(_this));\n    _this.decrement = _this.decrement.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"increment\",\n    value: function increment(e) {\n      this.setState(function (prevState) {\n        return {\n          value: Number(prevState.value) + 1\n        };\n      }, function () {\n        this.props.updateQuantity(this.state.value);\n      });\n      e.preventDefault();\n    }\n  }, {\n    key: \"decrement\",\n    value: function decrement(e) {\n      e.preventDefault();\n\n      if (this.state.value <= 1) {\n        return this.state.value;\n      } else {\n        this.setState(function (prevState) {\n          return {\n            value: Number(prevState.value) - 1\n          };\n        }, function () {\n          this.props.updateQuantity(this.state.value);\n        });\n      }\n    }\n  }, {\n    key: \"feed\",\n    value: function feed(e) {\n      this.setState({\n        value: this.refs.feedQty.value\n      }, function () {\n        this.props.updateQuantity(this.state.value);\n      });\n    }\n  }, {\n    key: \"resetQuantity\",\n    value: function resetQuantity() {\n      this.setState({\n        value: 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"stepper-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"decrement\",\n        onClick: this.decrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"\\u2013\"), React.createElement(\"input\", {\n        ref: \"feedQty\",\n        type: \"number\",\n        className: \"quantity\",\n        value: this.state.value,\n        onChange: this.feed.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"increment\",\n        onClick: this.increment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"+\"));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nCounter.propTypes = {\n  value: PropTypes.number\n};\nexport default Counter;","map":{"version":3,"sources":["C:\\Users\\Michael Chang\\dronuts-2019-group-4\\client\\src\\components\\customer\\Counter.js"],"names":["React","Component","PropTypes","Counter","props","state","value","itemQuantity","increment","bind","decrement","e","setState","prevState","Number","updateQuantity","preventDefault","refs","feedQty","feed","propTypes","number"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWG;AAApB,KAAb;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,+BAAjB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB;AAJiB;AAKlB;;;;8BAESE,C,EAAG;AACX,WAAKC,QAAL,CACE,UAAAC,SAAS;AAAA,eAAK;AACZP,UAAAA,KAAK,EAAEQ,MAAM,CAACD,SAAS,CAACP,KAAX,CAAN,GAA0B;AADrB,SAAL;AAAA,OADX,EAIE,YAAW;AACT,aAAKF,KAAL,CAAWW,cAAX,CAA0B,KAAKV,KAAL,CAAWC,KAArC;AACD,OANH;AAQAK,MAAAA,CAAC,CAACK,cAAF;AACD;;;8BAESL,C,EAAG;AACXA,MAAAA,CAAC,CAACK,cAAF;;AACA,UAAI,KAAKX,KAAL,CAAWC,KAAX,IAAoB,CAAxB,EAA2B;AACzB,eAAO,KAAKD,KAAL,CAAWC,KAAlB;AACD,OAFD,MAEO;AACL,aAAKM,QAAL,CACE,UAAAC,SAAS;AAAA,iBAAK;AACZP,YAAAA,KAAK,EAAEQ,MAAM,CAACD,SAAS,CAACP,KAAX,CAAN,GAA0B;AADrB,WAAL;AAAA,SADX,EAIE,YAAW;AACT,eAAKF,KAAL,CAAWW,cAAX,CAA0B,KAAKV,KAAL,CAAWC,KAArC;AACD,SANH;AAQD;AACF;;;yBAEIK,C,EAAG;AACN,WAAKC,QAAL,CACE;AACEN,QAAAA,KAAK,EAAE,KAAKW,IAAL,CAAUC,OAAV,CAAkBZ;AAD3B,OADF,EAIE,YAAW;AACT,aAAKF,KAAL,CAAWW,cAAX,CAA0B,KAAKV,KAAL,CAAWC,KAArC;AACD,OANH;AAQD;;;oCAEe;AACd,WAAKM,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD;;;6BACQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAS,QAAA,SAAS,EAAC,WAAnB;AAA+B,QAAA,OAAO,EAAE,KAAKI,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE;AACE,QAAA,GAAG,EAAC,SADN;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,SAAS,EAAC,UAHZ;AAIE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKa,IAAL,CAAUV,IAAV,CAAe,IAAf,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAWE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,KAAKD,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,CADF;AAiBD;;;;EAtEmBP,S;;AAyEtBE,OAAO,CAACiB,SAAR,GAAoB;AAClBd,EAAAA,KAAK,EAAEJ,SAAS,CAACmB;AADC,CAApB;AAIA,eAAelB,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Counter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: this.props.itemQuantity };\r\n    this.increment = this.increment.bind(this);\r\n    this.decrement = this.decrement.bind(this);\r\n  }\r\n\r\n  increment(e) {\r\n    this.setState(\r\n      prevState => ({\r\n        value: Number(prevState.value) + 1\r\n      }),\r\n      function() {\r\n        this.props.updateQuantity(this.state.value);\r\n      }\r\n    );\r\n    e.preventDefault();\r\n  }\r\n\r\n  decrement(e) {\r\n    e.preventDefault();\r\n    if (this.state.value <= 1) {\r\n      return this.state.value;\r\n    } else {\r\n      this.setState(\r\n        prevState => ({\r\n          value: Number(prevState.value) - 1\r\n        }),\r\n        function() {\r\n          this.props.updateQuantity(this.state.value);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  feed(e) {\r\n    this.setState(\r\n      {\r\n        value: this.refs.feedQty.value\r\n      },\r\n      function() {\r\n        this.props.updateQuantity(this.state.value);\r\n      }\r\n    );\r\n  }\r\n\r\n  resetQuantity() {\r\n    this.setState({\r\n      value: 1\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"stepper-input\">\r\n        <button  className=\"decrement\" onClick={this.decrement}>\r\n          â€“\r\n        </button>\r\n        <input\r\n          ref=\"feedQty\"\r\n          type=\"number\"\r\n          className=\"quantity\"\r\n          value={this.state.value}\r\n          onChange={this.feed.bind(this)}\r\n        />\r\n        <button className=\"increment\" onClick={this.increment}>\r\n          +\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCounter.propTypes = {\r\n  value: PropTypes.number\r\n};\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}